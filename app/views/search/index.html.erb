  <div class='containernohome'>  
 

<h4>Welcome!</h4>

<%= link_to 'Reset', search_path  %> 
 

 

<%= form_for :q, url: search_path, method: :get, html: { id: 'search_form' } do |f| %>
   <div class="sbox"><%= f.label 'Title', :class => 'hello' %> 
  <%= f.text_field :track_title %> </div><br /><br />

  <%= render(partial: 'checkboxes', locals: { f: f, klass: Production, collection: @productions }) %> 
  <%= render(partial: 'checkboxes', locals: { f: f, klass: Mood, collection: @moods }) %> 
  <%= render(partial: 'checkboxes', locals: { f: f, klass: Instrumentation, collection: @instrumentations }) %> 
  <%= f.submit "Search" %> 
<% end %>
  
<div id="tracks"> 
<table width="100%" class='table-striped table'>
  <tr>
<td width="15%">Catalogue No.</td>
<td width="20%">Title</td>
<td width="20%">Origin</td>
<td width="20%">Composer(s)</td> 
<td width="25%">Buttons</td>
</tr>
<% @tracks.each do |track| %>
<tr>
  <td width="15%" class="tracktable"><%= track.catalogue %></td>
  <td width="20%" class="tracktable"><%= track.title %></td>
  <td width="20%" class="tracktable"><%= track.origin %></td>
  <td width="20%" class="tracktable"><%= track.track_composer %></td>
  <td width="25%" class="tracktable">  
<% if track.url.blank? %> <% else %>
 
    <audio preload=""></audio>
    <ol class="audioplayer">
      

      <li class="audioli"><a href="#" data-src=<%= track.searchtrack %>
</a></li>

 
    </ol>
  
    <% end %>

  </td>  
  </tr>
<% end %>
</table>
</div>
</div>
</div>
<%= content_for :extra_footer do %>

<script>
     $(function() {

  var a = audiojs.createAll({
    trackEnded: function() {
      var el = $(this.element);
      var next = el.closest(".audiojs").next('ol').find("li.playing").next();
      if (!next.length) next = el.closest(".audiojs").next("ol").find("li").first();
      next.parent().find(".playing").removeClass("playing");
      next.addClass('playing');
      el.attr("src", $('> a', next).attr('data-src'));
      el.on("canplay", function() {
        this.play()
      })
    }
  });
  // Load in the first track
  var audio = a;
  $.each(audio, function(index, el) {
    var first = $(el.wrapper).next("ol").find("li:first")
      .addClass("playing").find("a").attr("data-src");
    el.load(first);
  });
  // Load in a track on click
  $('ol li').click(function(e) {
    var index = $(this).closest("ol").index("ol");
    e.preventDefault();
    $(this).addClass('playing').siblings()
      .removeClass('playing');
      var el = $('> a', this);
      el.attr("src", el.attr('data-src'));
      el.on("canplay", function() {
        this.play()
      })
  });
  // Keyboard shortcuts
  $(document).keydown(function(e) {
    var unicode = e.charCode ? e.charCode : e.keyCode;
    var elems = $('li.playing');
    elems.each(function(i, el) {
      var curr = $(el);
      // right arrow
      if (unicode == 39) {
        var next = curr.next();
        if (!next.length) {
          next = curr.closest("ol").find("li").first();
          next.click();
        }
        // back arrow
      } else if (unicode == 37) {
        var prev = curr.prev();
        if (!prev.length) {
          prev = curr.closest("ol").find("li").last();
          prev.click();
        }
        // spacebar
      } else if (unicode == 32) {
        $.each(audio, function(i, media) {
          media.playPause();
        })
      }
    })
  })
});

</script>

<% @tracks.each do |track| %>
<tr>
  <td width="15%" class="tracktable"><%= track.catalogue %></td>
  <td width="20%" class="tracktable"><%= track.title %></td>
  <td width="20%" class="tracktable"><%= track.origin %></td>
  <td width="20%" class="tracktable"><%= track.track_composer %></td>
  <td width="25%" class="tracktable">  
<% if track.url.blank? %> <% else %>
 
    <audio preload=""></audio>
    <ol class="audioplayer">
      

      <li class="audioli"><a href="#" data-src=<%= track.searchtrack %>
</a></li>

 
    </ol>
  
    <% end %>

  </td>  
  </tr>
<% end %>


  <script>

    $(document).ready(function() {
      var lastKeyPress = null;
      $('input:checkbox').change(filterResults);
      $('#q_track_title').keyup(filterResults);
    });

    var target = null;

    function filterResults(e) {
      target = e.target;
      var formValues = $('form').serialize();
      $.get("/search.json", formValues, function(response) {
        var data = response.tracks;
        history.pushState(null, null, response.new_url.replace('.json', ''));
        updateFilters(data);
        updateChecked(target);
        $tracks = $('#tracks').html('');
        data.tracks.forEach(function(track) {
          productions = track.productions.map(function(production) {
            return '<td>'+production.name+'</td>'
          });
          trackData = [
          
            '<table width="100%" class="table-striped table"><tr>',
            '<td width="15%" class="tracktable">'+ track.catalogue +'</td>',
            '<td width="20%" class="tracktable">'+ track.title +'</td>', 
            '<td width="20%" class="tracktable">'+ track.origin +'</td>',
            '<td width="20%" class="tracktable">'+ track.track_composer +'</td>',
            '<td width="25%" class="tracktable"><audio preload=""></audio><ol class="audioplayer"><li class="audioli"><a href="#" data-src="'+ track.url +'"></a></li></ol></td></tr></table>'
          
          ]
          trackView = trackData.concat(productions).join('\n');
          $tracks.append(trackView);
        });
      });
    }

    function updateFilters(data) {
      var filters = ['production', 'mood', 'instrumentation'];
      filters.forEach(function(filter) {
        updateFilter(filter, data[filter+"s"]);
      });
    }

    function updateFilter(type, ids) {
      checkboxes = $('input[name="q['+type+'_ids][]"]')
      checkbox_ids = ids.map(function(e) {
        return "q_"+type+"_ids_"+e.id;
      });
      checkboxes.each(function() {
        var $this = $(this).parent();
        if (checkbox_ids.indexOf(this.id) > -1) {
          $(this).removeAttr("disabled");
          $this.addClass('available');
          $this.removeClass('unavailable');
        } else {
          $(this).attr("disabled", true);
          $this.addClass('unavailable');
          $this.removeClass('available');
        }
      });
    }

    function updateChecked(e) {
      $e = $(e);
      if ($e.is('input[type="checkbox"')) {
        var c = $e.prop('checked') ? '#424632' : '#767c60';      
        var label = $e.parent();
        label.css('background-color', c);
      }
    }


  </script>

  <style>

  ol.audioplayer li {
    margin: 5px 0px;
    background-color: transparent; 
    list-style-type: none;
    padding: 0px; 
    /* font-size: 80%; */
    /* text-transform: capitalize; */

  </style>





<% end %>
</div>