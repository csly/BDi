  <div class='containernohome'>  
 

<h4>Welcome Company</h4>

<%= link_to 'Reset', search_path  %> 
 

 

<%= form_for :q, url: search_path, method: :get, html: { id: 'search_form' } do |f| %>
   <div class="sbox"><%= f.label 'Title', :class => 'hello' %> 
  <%= f.text_field :track_title %> </div><br /><br />

  <%= render(partial: 'checkboxes', locals: { f: f, klass: Production, collection: @productions }) %> 
  <%= render(partial: 'checkboxes', locals: { f: f, klass: Mood, collection: @moods }) %> 
  <%= render(partial: 'checkboxes', locals: { f: f, klass: Instrumentation, collection: @instrumentations }) %> 
  <%= f.submit "Search" %> 
<% end %>
  
<div id="tracks">
<table width="100%">
<tr>
<td width="20%">Catalogue No.</td>
<td width="20%">Title</td>
<td width="20%">Origin</td>
<td width="20%">Composer(s)</td> 
<td width="20%">Buttons</td>
</tr>
</table>
<table width="100%">
<% @tracks.each do |track| %>
<tr>
  <td width="20%" class="tracktable"><%= track.catalogue %></td>
  <td width="20%" class="tracktable"><%= track.title %></td>
  <td width="20%" class="tracktable"><%= track.origin %></td>
  <td width="20%" class="tracktable"><% track.composers.each do |production| %><%= production.name %></td>
  <td width="20%" class="tracktable">  
<% if track.url.blank? %> <% else %>
 
    <audio preload=""></audio>
    <ol class="audioplayer">
      

      <li class="audioli"><a href="#" data-src=<%= track.searchtrack %>
</a></li>

 <script>
     $(document).ready(function() {

        // Setup the player to autoplay the next track
        var a = audiojs.createAll({
          trackEnded: function() {
            var next = $('ol li.playing').next();
            if (!next.length) next = $('ol li').first();
            next.addClass('playing').siblings().removeClass('playing');
            audio.load($('a', next).attr('data-src'));
            audio.play();
          }
        }); 
        // Load in the first track
        var audio = a[0];
        first = $('ol a').attr('data-src');
        $('ol li').first().addClass('playing');
        audio.load(first);

        // Load in a track on click
        $('ol li').click(function(e) {
          e.preventDefault();
          $(this).addClass('playing').siblings().removeClass('playing');
          audio.load($('a', this).attr('data-src'));
          audio.play();
        });
        // Keyboard shortcuts
        $(document).keydown(function(e) {
          var unicode = e.charCode ? e.charCode : e.keyCode;
             // right arrow
             if (unicode == 39) {
              var next = $('li.playing').next();
              if (!next.length) next = $('ol li').first();
              next.click();
            // back arrow
          } else if (unicode == 37) {
            var prev = $('li.playing').prev();
            if (!prev.length) prev = $('ol li').last();
            prev.click();
            // spacebar
          } else if (unicode == 32) {
            audio.playPause();
          }
        })
      });
</script>
    <% end %>
    </ol>
  

  </td>
  <% end %>
  </tr>
<% end %>
</table>
</div>
</div>
</div>
<%= content_for :extra_footer do %>
  <script>

    $(document).ready(function() {
      var lastKeyPress = null;
      $('input:checkbox').change(filterResults);
      $('#q_track_title').keyup(filterResults);
    });

    var target = null;

    function filterResults(e) {
      target = e.target;
      var formValues = $('form').serialize();
      $.get("/search.json", formValues, function(response) {
        var data = response.tracks;
        history.pushState(null, null, response.new_url.replace('.json', ''));
        updateFilters(data);
        updateChecked(target);
        $tracks = $('#tracks').html('');
        data.tracks.forEach(function(track) {
          productions = track.productions.map(function(production) {
            return '<td>'+production.name+'</td>'
          });
          trackData = [
          
            '<table width="100%"><tr><td width="20%" class="tracktable">' + track.catalogue + '</td>',
            '<td width="20%" class="tracktable">'+track.title+'</td>',
            '<td width="20%" class="tracktable">' + track.oldtitle + '</td>',
            '<td width="20%" class="tracktable">' + track.composers + '</td></tr></table>'
          
          ]
          trackView = trackData.concat(productions).join('\n');
          $tracks.append(trackView);
        });
      });
    }

    function updateFilters(data) {
      var filters = ['production', 'mood', 'instrumentation'];
      filters.forEach(function(filter) {
        updateFilter(filter, data[filter+"s"]);
      });
    }

    function updateFilter(type, ids) {
      checkboxes = $('input[name="q['+type+'_ids][]"]')
      checkbox_ids = ids.map(function(e) {
        return "q_"+type+"_ids_"+e.id;
      });
      checkboxes.each(function() {
        var $this = $(this).parent();
        if (checkbox_ids.indexOf(this.id) > -1) {
          $(this).removeAttr("disabled");
          $this.addClass('available');
          $this.removeClass('unavailable');
        } else {
          $(this).attr("disabled", true);
          $this.addClass('unavailable');
          $this.removeClass('available');
        }
      });
    }

    function updateChecked(e) {
      $e = $(e);
      if ($e.is('input[type="checkbox"')) {
        var c = $e.prop('checked') ? '#424632' : '#767c60';      
        var label = $e.parent();
        label.css('background-color', c);
      }
    }


  </script>

  





<% end %>
</div>